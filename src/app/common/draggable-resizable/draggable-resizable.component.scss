.resizable-draggable {
  outline: 2px dashed var(--ion-color-primary);
  color: var(--ion-color-primary);
  background-color: #ffffffad;
  position: absolute;

  min-width: 20px;
  min-height: 20px;

  &.active {
    outline-style: solid;
    background-color: #80ff800d;
  }

  &:hover {
    cursor: all-scroll;
  }

  span:first-of-type {
    position: absolute;
    left: 50%;
    //transform: translate3d(-50%, -100%, 0);
    transform: translate3d(-50%, 120%, 0);
    bottom: 0;
    z-index: 98;
    text-shadow: 0px 1px 1px #ffab40;
  }

  span:nth-of-type(2) {
    position: absolute;
    top: 50%;
    //transform: translate3d(-100%, -50%, 0);
    transform: translate3d(-125%, -50%, 0);
  }

  span:nth-of-type(3) {
    position: absolute;
    //transform: translate3d(-100%, -100%, 0);
    transform: translate3d(-75%, -100%, 0);
    width: 100px;
  }
}

.resize-action {
  position: absolute;
  left: 100%;
  top: 100%;
  transform: translate3d(10%, 20%, 0) rotateZ(45deg);
  border-style: solid;
  border-width: 20px;
  border-color: transparent transparent transparent var(--ion-color-primary);
  &.disable-drag {
    border: none;
  }
  &.danger {
    border-color: transparent transparent transparent var(--ion-color-danger);
  }
  &:hover, &:active {
    cursor: nwse-resize;
  }
}

.drag-action-buttons {
  position: absolute;
  top: 0;
  transform: translate3d(0%, -130%, 0);
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.letter-identifier {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  p {
    margin: 0;
    padding: 0;
    font-size: 3rem;
  }
  mat-icon {
    font-weight: bolder;
  }
}
.free-from-damages {
  mat-icon {
    font-size: 140px;
    height: 140px;
    width: 140px;
    color: darkgreen;
  }
}
::ng-deep {
  .default {
    color: var(--ion-color-primary) !important;
  }

  .warning {
    color: var(--ion-color-primary) !important;
    outline-color: var(--ion-color-primary) !important;
  }
  .danger {
    color: var(--ion-color-danger) !important;
    outline-color: var(--ion-color-danger) !important;
  }

  .disable-drag {
    color: var(--ion-color-primary) !important;
    outline: none !important;
    background: none !important;
  }

  .add-note-container {
    --min-width: 35%;
  }
  .lock {
    opacity: 0.7;
    color:  var(--ion-color-primary) !important;
  }
  .unlock {
    opacity: inherit;
  }
}



